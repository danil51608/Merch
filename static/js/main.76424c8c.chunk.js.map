{"version":3,"sources":["imgs/t-shirtFront.png","components/Maket.js","components/StartPage.js","redux/types.js","redux/actions.js","components/Settings/Settings.js","imgs/t-shirtBack.png","imgs/t-shirtWFront.png","imgs/t-shirtWBack.png","components/DesignArea/DesignArea.js","components/Create.js","App.js","reportWebVitals.js","redux/constructorReducer.js","redux/settingsReducer.js","redux/rootReducer.js","index.js"],"names":["Maket","className","src","tShirt","alt","exact","to","style","marginTop","StartPage","SWITCH_BLUE","SWITCH_PURPLE","SWITCH_GREEN","SWITCH_RED","SWITCH_BLACK","SWITCH_WHITE","SWITCH_SIDE","CHANGE_TEXT","CHANGE_FONT_SIZE","CHANGE_TEXT_COLOR","SHOW_TEXT_SETTINGS","SHOW_IMAGE_SETTINGS","CHANGE_IMG","toggleTextSettings","type","toggleImageSettings","mapDispatchToProps","changeText","text","payload","changeFontSize","size","changeTextColor","color","changeImg","img","connect","state","showTextSettings","settingsReducer","showImageSettings","fontSize","props","useState","hideSettings","setHideSettings","id","onClick","defaultValue","onChange","e","target","value","file","URL","createObjectURL","files","setImage","switchToBlue","switchToPurple","switchToGreen","switchToBlack","switchToRed","switchToWhite","switchSide","constructorReducer","side","textColor","image","handleColorClick","switchColor","Array","from","document","getElementsByClassName","map","colorElement","border","useEffect","querySelectorAll","forEach","el","elmnt","pos1","pos2","pos3","pos4","dragMouseDown","window","event","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","top","offsetTop","left","offsetLeft","getElementById","onmousedown","dragElement","whiteShirtFront","tShirtFront","tShirtBack","whiteShirtBack","createUserElement","params","wrapper","wrapperStyles","getComputedStyle","getPropertyValue","width","height","newElement","createElement","oncontextmenu","remove","input","innerText","imageEl","appendChild","Create","App","basename","location","pathname","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"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","file":"static/js/main.76424c8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/t-shirtFront.af472413.png\";","import React from 'react'\nimport tShirt from '../imgs/t-shirtFront.png'\nimport {\n    Link\n  } from \"react-router-dom\";\n\nexport default function Maket(){\n    return (\n        <div className=\"maketWrapper\">\n            <div className=\"imgContainer\">\n                <img src={tShirt} alt=\"\" />\n            </div>\n            <Link exact to=\"/create\">\n                    <button className=\"settingsButton\" style={{marginTop:0}}>Create</button>\n            </Link>\n            \n        </div>\n    )\n}","import React from 'react'\nimport Maket from './Maket'\n\n\nexport default function StartPage() {\n    return (\n            <div className=\"wrapper\">\n                <div className=\"banner\">\n                   \n                </div>\n                <Maket />\n            </div>\n    )\n}","export const SWITCH_BLUE = 'SWITCH_BLUE';\nexport const SWITCH_PURPLE = 'SWITCH_PURPLE';\nexport const SWITCH_GREEN = 'SWITCH_GREEN';\nexport const SWITCH_RED = 'SWITCH_RED';\nexport const SWITCH_BLACK = 'SWITCH_BLACK';\nexport const SWITCH_WHITE = 'SWITCH_WHITE';\nexport const SWITCH_SIDE = 'SWITCH_SIDE';\nexport const CHANGE_TEXT = 'CHANGE_TEXT';\nexport const CHANGE_FONT_SIZE = 'CHANGE_FONT_SIZE';\nexport const CHANGE_TEXT_COLOR = 'CHANGE_TEXT_COLOR';\nexport const SHOW_TEXT_SETTINGS = 'SHOW_TEXT_SETTINGS';\nexport const SHOW_IMAGE_SETTINGS = 'SHOW_IMAGE_SETTINGS';\nexport const CHANGE_IMG = 'CHANGE_IMG';\n\n","import {SWITCH_BLUE, SWITCH_GREEN, SWITCH_PURPLE, SWITCH_BLACK, SWITCH_RED, SWITCH_WHITE, SWITCH_SIDE, CHANGE_TEXT, CHANGE_FONT_SIZE,\n    SHOW_TEXT_SETTINGS, CHANGE_TEXT_COLOR, SHOW_IMAGE_SETTINGS, CHANGE_IMG} from './types'\n\n\nexport const switchToBlue = () => {\n    return {\n        type: SWITCH_BLUE\n    }\n}\n\nexport const switchToPurple = () => {\n    return {\n        type: SWITCH_PURPLE\n    }\n}\n\nexport const switchToGreen = () => {\n    return {\n        type: SWITCH_GREEN\n    }\n}\n\nexport const switchToRed = () => {\n    return {\n        type: SWITCH_RED\n    }\n}\n\nexport const switchToBlack = () => {\n    return {\n        type: SWITCH_BLACK\n    }\n}\n\nexport const switchToWhite = () => {\n    return {\n        type: SWITCH_WHITE\n    }\n}\n\nexport const switchSide = () => {\n    return {\n        type: SWITCH_SIDE\n    }\n}\n\nexport const changeText = (text) =>{\n    return {\n        type: CHANGE_TEXT,\n        payload: text\n    }\n}\n\nexport const changeFontSize = (size) =>{\n    return {\n        type: CHANGE_FONT_SIZE,\n        payload: size\n    }\n}\n\nexport const changeTextColor = (color) =>{\n    return {\n        type: CHANGE_TEXT_COLOR,\n        payload: color\n    }\n}\n\nexport const toggleTextSettings = () =>{\n    return {\n        type: SHOW_TEXT_SETTINGS\n    }\n}\n\nexport const toggleImageSettings = () =>{\n    return {\n        type: SHOW_IMAGE_SETTINGS\n    }\n}\n\nexport const changeImg = (img) =>{\n    return {\n        type: CHANGE_IMG,\n        payload: img\n    }\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { changeText, changeFontSize, toggleTextSettings, changeTextColor, toggleImageSettings, changeImg } from '../../redux/actions'\nimport './settings.css'\n\nfunction Settings(props) {\n    const [hideSettings, setHideSettings] = useState(true)\n    const { changeText, changeFontSize, toggleTextSettings, showTextSettings, changeTextColor, showImageSettings, toggleImageSettings, changeImg, fontSize } = props\n\n    function setImage(e){\n        const file = URL.createObjectURL(e.target.files[0])\n        changeImg(file)\n     }\n\n     // открывает редактор текста/картинки и закрывает другой редактор\n    return (\n        <div className=\"settings\" id=\"settings\">\n            <h2>Design You Product</h2>\n            {\n                hideSettings \n                ? \n                <button className='settingsButton' onClick={() => setHideSettings(false)}>Add Element</button>\n                : \n                <div>\n                    <button className='settingsButton' onClick={() => setHideSettings(true)}>Hide Printable Area</button>\n                    <button className='settingsButton' onClick={() => toggleTextSettings()}>Add Text</button>\n                    {\n                        showTextSettings \n                        ? \n                        <div>\n                            <label>Your Text</label><br/>\n                            <textarea className='settingsValues' type='text' defaultValue='Text' id='textValue' onChange={(e) => changeText(e.target.value)} /><br/>\n                            <label>Font Size</label><br/>\n                            <input className='settingsValues' type='text' defaultValue={fontSize} id='fontSize' onChange={(e) => changeFontSize(e.target.value)} /><br/>\n                            <label>Text Color</label><br/>\n                            <input type='color' onChange={(e) => changeTextColor(e.target.value)} />\n                        </div>\n                        : \n                        null\n                    }\n                    \n                    <button className='settingsButton' onClick={() => toggleImageSettings()}>Add Image</button>\n                    {\n                        showImageSettings \n                        ?\n                        <input type='file' id='imageInput' onChange={(e) => setImage(e)} />\n                        : \n                        null\n                    }\n                </div>\n            }\n\n        </div>\n    )\n}\n\n\n// получение state'ов и передача их в компонент\nconst mapStateToProps = (state) => {\n    return {\n        showTextSettings: state.settingsReducer.showTextSettings,\n        showImageSettings: state.settingsReducer.showImageSettings,\n        fontSize: state.settingsReducer.fontSize\n    }\n}\n\n// получение actions и передача их в компонент\nconst mapDispatchToProps = {\n    changeText,\n    changeFontSize,\n    toggleTextSettings,\n    changeTextColor,\n    toggleImageSettings, \n    changeImg\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n\n","export default __webpack_public_path__ + \"static/media/t-shirtBack.8872783e.png\";","export default __webpack_public_path__ + \"static/media/t-shirtWFront.b79cf929.png\";","export default __webpack_public_path__ + \"static/media/t-shirtWBack.977911a7.png\";","import React, {useEffect} from 'react'\nimport { Link } from \"react-router-dom\";\nimport './DesignArea.css'\nimport tShirtFront from '../../imgs/t-shirtFront.png'\nimport tShirtBack from '../../imgs/t-shirtBack.png'\nimport whiteShirtFront from '../../imgs/t-shirtWFront.png'\nimport whiteShirtBack from '../../imgs/t-shirtWBack.png'\nimport {connect} from 'react-redux'\nimport {switchToBlue, switchToPurple, switchToGreen, switchToBlack, switchToRed, switchToWhite, switchSide, toggleTextSettings, toggleImageSettings} from '../../redux/actions'\n\nfunction DesignArea(props){\n\n    // redux states and actions\n    const {switchToBlue, switchToPurple, switchToGreen, switchToBlack, switchToRed,\n           switchToWhite, switchSide, color, side, text, fontSize, textColor, toggleTextSettings, showTextSettings,\n           showImageSettings, image, toggleImageSettings\n           } = props\n\n    \n    function handleColorClick(e, switchColor){\n        const colorElements = Array.from(document.getElementsByClassName('colorElement'))\n        colorElements.map(colorElement=>{\n            colorElement.style.border = '1px solid black';\n        })\n        e.target.style.border = '3px solid black'\n        switchColor()\n    }\n    \n    // делает элементы перетаскиваемыми\n    useEffect(() => setDraggableElements(), [showTextSettings, showImageSettings])\n\n    // создает div с текстом пользователя\n    function createText() {\n        toggleTextSettings() // закрывает настройки текста\n        const params = {fontSize, textColor} // получение и передача настроек текста\n        createUserElement(params) // создает статичный элемент \n    }\n\n    function createImage() {\n        toggleImageSettings() // закрывает настройки картинки\n        createUserElement(image, 'img') // создает статичный элемент \n    }\n\n    return (\n        <div className=\"DesignAreaWrapper\">\n            <div className=\"sideButtonsWrapper\">\n                <button className=\"sideButton\" onClick={switchSide}>Front/Back</button>\n            </div>\n            <div className=\"t-shirtWrapper\">\n                {\n                    color === 'white' && side ? <img src={whiteShirtFront} alt=''/> : \n                    color === 'white' && !side ? <img src={whiteShirtBack} alt=''/> : \n                    side ? <img src={tShirtFront} alt='' className={color}/> :\n                    !side ? <img src={tShirtBack} alt='' className={color}/> : null\n\n                }\n                \n                {\n                    showTextSettings ? \n                    \n                    <div id='dragWrapper' className='draggable'> \n                        <button onClick={()=>createText()}>&#10003;</button>\n                        <textarea id='dragWrapperheader' className='dragger' value={text} style={{fontSize: fontSize+'px', color: textColor}} onChange={()=> null}></textarea>\n                    </div> \n\n                    : null\n                }\n                {\n                    showImageSettings ?\n\n                    <div id='dragWrapperImg' className='draggable'> \n                        <button onClick={()=>createImage()}>&#10003;</button>\n                        <img id='dragWrapperImgheader' className='dragger' src={image} alt=''/>\n                    </div> \n\n                    : null\n                    \n                }\n\n            </div>\n\n            <ul className='colorList'>\n                <li id='blueColor' className='colorElement' onClick={(e)=>handleColorClick(e, switchToBlue) }></li>\n                <li id='purpleColor' className='colorElement' onClick={(e)=>handleColorClick(e, switchToPurple)}></li>\n                <li id='greenColor' className='colorElement' onClick={(e)=>handleColorClick(e, switchToGreen)}></li>\n                <li id='blackColor' className='colorElement' onClick={(e)=>handleColorClick(e, switchToBlack)}></li>\n                <li id='redColor' className='colorElement' onClick={(e)=>handleColorClick(e, switchToRed)}></li>\n                <li id='whiteColor' className='colorElement' onClick={(e)=>handleColorClick(e, switchToWhite)}></li>\n            </ul>\n\n            <div className=\"instructions\">\n                <h2>Instructions:</h2>\n                <span>1. Right Click To Delete Element</span><br/><br/>\n                <span>2. Click On Color Circle To Change The T-Shirt Color</span><br/><br/>\n                <span>3. Click Front/Back To Change The T-Shirt Side</span><br/><br/>\n                <Link exact to=\"/\">\n                    <button className=\"settingsButton\">Go To StartPage</button>\n                </Link>\n                \n            </div>\n           \n\n        </div>\n    )\n}\n\n\n// получение state'ов и передача их в компонент\nconst mapStateToProps = (state) => {\n    return {\n        color: state.constructorReducer.color,\n        side: state.constructorReducer.side,\n        text: state.settingsReducer.text,\n        fontSize: state.settingsReducer.fontSize,\n        showTextSettings: state.settingsReducer.showTextSettings,\n        textColor: state.settingsReducer.textColor,\n        showImageSettings: state.settingsReducer.showImageSettings,\n        image: state.settingsReducer.image,\n    }\n}\n\n\n// получение actions и передача их в компонент\nconst mapDispatchToProps = {\n    switchToBlue,\n    switchToPurple,\n    switchToGreen, \n    switchToBlack,\n    switchToRed,\n    switchToWhite,\n    switchSide,\n    toggleTextSettings,\n    toggleImageSettings\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DesignArea)\n\n\n\nfunction createUserElement(params, type='text'){\n    // получение wrapper и его стилей для определения позиции элемента \n    const wrapper =  document.getElementById(type === 'text' ? 'dragWrapper' : 'dragWrapperImg')\n    const wrapperStyles = window.getComputedStyle(wrapper)\n    const top = wrapperStyles.getPropertyValue('top')\n    const left = wrapperStyles.getPropertyValue('left')\n    const width = wrapperStyles.getPropertyValue('width')\n    const height = wrapperStyles.getPropertyValue('height')\n\n    // создание элемента\n    const newElement = document.createElement('div')\n    newElement.className = 'insertedElement'\n    // размещение элемента\n    newElement.style.top = top\n    newElement.style.left = left\n    newElement.oncontextmenu = (e) => { \n        e.preventDefault();\n        e.target.remove()\n    }\n    // присвоение заданных размеров элементу\n    newElement.style.width = width\n    newElement.style.height = height\n\n    // при создании элемента текста\n    if(type === 'text'){\n        // получение поля ввода текста\n        const input = document.getElementById('dragWrapperheader')\n        newElement.innerText = input.value\n        // задание пользовательских настроек текста\n        newElement.style.color = params.textColor\n        newElement.style.fontSize = params.fontSize + 'px'\n    }\n\n    // при создании элемента картинки\n    else{\n        // создание картинки\n        const imageEl = document.createElement('img')\n        imageEl.src = params\n        // вставка картинки в элемент\n        newElement.appendChild(imageEl)\n    }\n\n    // получение контейнера футболки и вставка в него элемента\n    const tShirt = document.getElementsByClassName('t-shirtWrapper')[0]\n    tShirt.appendChild(newElement)\n}\n\nfunction setDraggableElements(){\n    const ElList = document.querySelectorAll('.draggable')\n    ElList.forEach(el => dragElement(el))\n}\n\nfunction dragElement(elmnt) {\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  if (document.getElementById(elmnt.id + \"header\")) {\n    // if present, the header is where you move the DIV from:\n    document.getElementById(elmnt.id + \"header\").onmousedown = dragMouseDown;\n  } else {\n    // otherwise, move the DIV from anywhere inside the DIV:\n    elmnt.onmousedown = dragMouseDown;\n  }\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onmousemove = elementDrag;\n  }\n\n  function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n    // stop moving when mouse button is released:\n    document.onmouseup = null;\n    document.onmousemove = null;\n  }\n}\n","import React from 'react'\nimport Settings from './Settings/Settings'\nimport DesignArea from './DesignArea/DesignArea'\n\nexport default function Create(){\n    return (\n        <div className='createWrapper'>\n            <Settings />\n            <DesignArea />\n        </div>\n    )\n}","import './App.css';\nimport StartPage from './components/StartPage'\nimport Create from './components/Create';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Switch>\n        <Route exact path=\"/\">\n          <StartPage />\n        </Route>\n        <Route path=\"/create\">\n          <Create />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {SWITCH_BLUE, SWITCH_GREEN, SWITCH_PURPLE, SWITCH_BLACK, SWITCH_RED, SWITCH_WHITE, SWITCH_SIDE} from './types'\n\nconst initialState = {\n    color: 'red',\n    side: true \n}\n\n\nexport const constructorReducer = (state = initialState, action) => {\n   switch (action.type) {\n       case SWITCH_BLUE:\n           return {...state, color: 'blue'}\n       case SWITCH_PURPLE:\n           return {...state, color: 'purple'}\n       case SWITCH_GREEN:\n           return {...state, color: 'green'}\n       case SWITCH_BLACK:\n           return {...state, color: 'black'}\n       case SWITCH_RED:\n           return {...state, color: 'red'}\n       case SWITCH_WHITE:\n           return {...state, color: 'white'}\n       case SWITCH_SIDE:\n           return {...state, side: !state.side}\n        default:\n            return state\n   }\n}\n","import {CHANGE_TEXT, CHANGE_FONT_SIZE, SHOW_TEXT_SETTINGS, CHANGE_TEXT_COLOR, SHOW_IMAGE_SETTINGS, CHANGE_IMG} from './types'\n\n\nconst initialState = {\n    text: 'Text',\n    fontSize: '42',\n    showTextSettings: false,\n    showImageSettings: false,\n    textColor: '#000000',\n    image: ''\n}\n\n\nexport const settingsReducer = (state = initialState, action) => {\n   switch (action.type) {\n       case CHANGE_TEXT:\n           return {...state, text: action.payload}\n       case CHANGE_FONT_SIZE:\n           return {...state, fontSize: action.payload}\n       case CHANGE_TEXT_COLOR:\n           return {...state, textColor: action.payload}\n       case SHOW_TEXT_SETTINGS:\n           return {...state, showTextSettings: !state.showTextSettings} \n       case SHOW_IMAGE_SETTINGS:\n           return {...state, showImageSettings: !state.showImageSettings}   \n       case CHANGE_IMG:\n           return {...state, image: action.payload} \n        default:\n            return state\n   }\n}","import {combineReducers} from 'redux'\nimport {constructorReducer} from './constructorReducer'\nimport {settingsReducer} from './settingsReducer'\n\n\nexport const rootReducer = combineReducers({\n    constructorReducer,\n    settingsReducer\n}) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport {rootReducer} from './redux/rootReducer'\n\nconst store = createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}